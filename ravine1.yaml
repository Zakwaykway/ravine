meta:
  engine: 4.1.0
  name: ravine_v1
  author: zakwaykway
  url: https://github.com/zakwaykway/ravine
  
units:
  capx: u-0.5 # kc visual size
  capy: u-0.5
  kx: u # spacing
  ky: u
  xiao_x: 19 # xiao measurements
  xiao_y: 21
  $default_height: 0
  $default_width: 0
  switch: 16 # switch size
  b: 0.1kx # bind
  p: 0.45kx # polygon

  mcu_x: 0 # manual offset
  mcu_y: 0

  pinky_splay: 5
  ring_stagger: .7ky
  ring_splay: 0
  middle_stagger: 0.25ky
  middle_splay: 0
  index_stagger: -0.45ky
  inner_stagger: -0.4ky
  thumb_base_angle: -16
  thumb_splay: -0
  thumb_adj: 0
  thumb_stagger: 0.125ky
  thumb_shiftx: 0.45kx # locational
  thumb_shifty: -1.1ky


points:
  zones.matrix: 
    anchor.shift: [160, -185]
    rotate: pinky_splay + ring_splay + middle_splay
    key:
      width: capx
      height: capy
      spread: kx
      padding: ky
    rows:
      bottom.row_net: P6
      home.row_net: P5
      top.row_net: P4
    columns.pinky:
      key.column_net: P0
      rows:
        bottom.skip: true
    columns.ring:
      key:
        stagger: ring_stagger
        splay: -pinky_splay
        column_net: P1
      rows.bottom.column_net: P0
    columns.middle:
      key:
        stagger: middle_stagger
        splay: -ring_splay
        column_net: P2
      rows.bottom.column_net: P1
    columns.index:
      key:
        stagger: index_stagger
        splay: -middle_splay
        column_net: P3
      rows.bottom.column_net: P2
    columns.inner:
      key:
        stagger: inner_stagger
        column_net: P3
      rows:
        top.row_net: P6
        home.row_net: P7
        bottom.skip: true
  zones.thumb: # thumbs
    anchor:
      ref: matrix_index_bottom
      shift: [thumb_shiftx, thumb_shifty]
    key:
      $extends: points.zones.matrix.key
      row_net: P7
    columns:
      tucky.key:
        splay: thumb_base_angle
        column_net: P1
      reachy.key:
        splay: thumb_splay
        stagger: thumb_stagger
        column_net: P2
  zones.encoder: # thumbs
    anchor:
      ref: thumb_tucky
      shift: [-ky, -2thumb_stagger]
    key:
      $extends: points.zones.matrix.key
    columns:
      enccol.rows.encrow.column_net: P0
      enccol.rows.encrow.row_net: P7
        
  zones.reference_top_center:  # mcu ref
    anchor:
      ref: matrix_inner_top
      shift: [mcu_x, mcu_y]
  zones.mcu:
    anchor:
      ref: reference_top_center
    key:
      width: xiao_x
      height: xiao_y
  zones.reset: # reset switch
    key:
      width: 8
      height: 4.9
    anchor:
      ref: matrix_inner_home
      shift: [-kx/2+8/2, -ky/2-4.9/2]
  zones.slider: # power switch
    key:
      width: 9.5
      height: 7.75
    anchor:
      ref: matrix_inner_home
      shift: [kx/2-9.5/2, -ky/2 -7.75/2] 
  zones.jst: # battery connector
    anchor:
      ref: matrix_middle_bottom
      shift: [kx/2.5, -ky/1.3]
      rotate: -90
    key:
      width: 5
      height: 10
      spread: 2
    columns:
      f.key:
        top_net: battery
        bottom_net: GND
      b.key:
        top_net: GND
        bottom_net: battery


outlines:
    _key_outline:
      - what: rectangle
        bound: true
        size: switch
        where:
          - /matrix_.*/
          - /thumb_.*/
      - what: polygon # edge wedges, main shape
        points:
          - ref: matrix_pinky_home
            shift: [-p, -p]
          - ref: matrix_pinky_top
            shift: [-p, p]
          - ref: matrix_ring_top
            shift: [-p, p]
          - ref: matrix_middle_top
            shift: [-p, p]
          - ref: matrix_middle_top
            shift: [p, p]
          - ref: matrix_index_top
            shift: [p, p]
          - ref: matrix_inner_top
            shift: [p, p]
          - ref: thumb_reachy
            shift: [p, p]
          - ref: thumb_reachy
            shift: [p, -p]
          - ref: thumb_tucky
            shift: [p, -p]
          - ref: thumb_tucky
            shift: [-p, -p]
        fillet: 0

    _board:
      - _key_outline

    _switches:
      - what: rectangle
        size: 14
        where:
          - /matrix_.*/
          - /thumb_.*/
          - /encoder_.*/
        corner: 0.5
    _keycaps:
      - what: rectangle
        size: [capx, capy]
        where:
          - /matrix_.*/
          - /thumb_.*/
    _mcu:
      - what: rectangle
        where: mcu
        size: [xiao_x, xiao_y]
    _mcu_hole:
      - what: rectangle
        where: mcu
        size: [xiao_x+2, xiao_y+2]
        fillet: 1
    _reset:
      - what: rectangle
        where: reset
        size: [8, 4.9]
    _slider:
      - what: rectangle
        where: slider
        size: [9.5, 7.75]
    _jst:
      - what: rectangle
        where: /jst_.*/

    debug:
      - _board
      - ^_switches
      - ^_keycaps
      - ^_mcu
      - ^_mcu_hole
      - ^_reset
      - ^_slider
      - ^_jst
    top_view:
      - _board
      - ^_keycaps
      - ^_mcu
    switchplate:
      - _board
      - -_switches
      - operation: subtract
        name: _mcu_hole
        fillet: 1

pcbs:
  ravine_v1:
    template: kicad8
    outlines:
      main:
        outline: _board
    footprints:
      switches_main:
        what: ceoloide/switch_choc_v1_v2
        where:
          - /matrix_.*/
          - /thumb_.*/ 
        params:
          from: "{{row_net}}"
          to: "{{colrow}}"
          include_plated_holes: true
          choc_v1_stabilizers_diameter: 1.7
          reversible: true
          hotswap_pads_same_side: true
          include_keycap: true

      diodes:
        what: ceoloide/diode_tht_sod123
        where:
          - /matrix_.*/
          - /thumb_.*/
          - /encoder_.*/
        params:
          reversible: true
          include_thru_hole_smd_pads: true
          from: "{{colrow}}"
          to: "{{column_net}}"
        adjust:
          shift: [4.5, -8.5]
          rotate: 180

      test:
        what: ceoloide/switch_mx
        where:
          - aggregate.parts: [matrix_pinky_top, matrix_pinky_home]
            shift: [kx/2+5, 0]
          - aggregate.parts: [matrix_ring_top, matrix_middle_top]
            shift: [1, -ky/2-2]
            rotate: 180
        params:
          from: ''
          to: ''

      test2:
        what: ceoloide/power_switch_smd_side
        where: # when there's an aggregate present in 'where',
               # it forces there to only be ONE (in kicad viewer, anyways)
               # without aggregates, this works fine 
          - reset
          - slider
          - aggregate.parts: [matrix_middle_home, matrix_index_home]
          - aggregate.parts: [matrix_middle_bottom, matrix_index_bottom]


      encoder:
        what: ceoloide/rotary_encoder_ec11_ec12
        where: /encoder_.*/
        params:
          reversible: true
          S1: "{{column_net}}"
          S2: "{{row_net}}"
          A: P8
          C: P9

      xiao:
        what: xiao
        where: mcu

      reset:
        what: button
        where: reset
        params:
          designator: RESET
          side: '*'
          from: RST
          to: GND

      slider:
        what: placeholder
        where: slider
        params:
          designator: SLIDER
          P1: battery
          P2: BAT_POS
          P3: ''

      jst:
        what: ceoloide/battery_connector_jst_ph_2
        where: /jst_.*/
        params:
          reversible: true
          BAT_P: "{{top_net}}"
          BAT_N: "{{bottom_net}}"

  ravine_switchplate:
    outlines:
      main:
        outline: switchplate
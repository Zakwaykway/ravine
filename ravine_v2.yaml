meta:
  name: ravine_v2
  engine: 4.1.0
  main_inspiration: ezxzeng/sweep_squared_rot
  author: zakwaykway
units:
  kx: u # spacing
  ky: u
  px: u-0.75 # keycap size
  py: u-0.75

  pinky_splay: 0
  ring_stagger: .7ky
  ring_splay: 0
  middle_stagger: 0.25ky
  index_stagger: -0.5ky
  inner_stagger: -0.4ky
  thumb_base_angle: 12
  thumb_splay: 12
  thumb_stagger: 0.125ky
  thumb_shiftx: 0.5kx # changes tucky's origin
  thumb_shifty: -ky/10
  thumb_size: 1.5 # units of width
  thumb_rotation: -180

  # ==================== object sizes ====================
  center_x: 2
  center_y: 4
  center_r: -13 + pinky_splay/2

  xiao_x: 18
  xiao_y: 21

  trrs_x: 0
  trrs_y: 0

  reset_x: 8
  reset_y: 5.6

  slider_x: 9.5
  slider_y: 7.75

  jst_x: 6
  jst_y: 12.5 # including male

points.zones:
  matrix: # mx is top side, 90ยบ turns it c.clockw.
    anchor: 
      shift: [150, -150] # MOVE ALL
      rotate: center_r
    key:
      spread: kx
      padding: ky
      autobind: 0
    rows:
      bottom.row_net: row2
      home.row_net: row1
      top.row_net: row0
    columns.pinky:
      key.column_net: col0
      rows.bottom.skip: true
      rows.home.adjust.rotate: 180
    columns.ring:
      key:
        stagger: ring_stagger
        splay: -pinky_splay
        column_net: col1
        origin: [kx/2, -ky/2+ky-ring_stagger] # set origin as tangent pinky_home's corner
      rows.bottom:
        column_net: col0
    columns.middle:
      key:
        stagger: middle_stagger
        splay: -ring_splay
        column_net: col2
        origin: [-kx/2, -ky/2]
      rows.bottom.column_net: P1
    columns.index:
      key:
        stagger: index_stagger
        column_net: col3
      rows.bottom.column_net: col2
    columns.inner:
      key:
        stagger: inner_stagger
        column_net: col3
      rows:
        top.row_net: row2
        home.row_net: row3
        bottom.skip: true
  thumb:
    key:
      $extends: points.zones.matrix.key
      row_net: row3
      adjust.rotate: 180
    anchor:
      ref: matrix_index_bottom
      shift: [thumb_shiftx, -ky+thumb_shifty]
    columns:
      tucky.key:
        origin: [-kx/2, ky/2]
        column_net: col1
        splay: -thumb_base_angle
      reachy.key:
        bind: [(thumb_size*kx-kx)/2, 0]
        column_net: col2
        splay: -thumb_splay
        stagger: thumb_stagger
        origin: [-kx/2, -ky/2]
        adjust.rotate: thumb_rotation
        width: thumb_size * kx
  encoder: # thumbs
    key:
      $extends: points.zones.matrix.key
      column_net: col0
      row_net: row3
    anchor:
      ref: matrix_middle_bottom
      shift: [0, -ky]
  center:
    anchor:
      aggregate.parts: [matrix_pinky_top, thumb_reachy]
      orient: -center_r+(pinky_splay+ring_splay+thumb_base_angle+thumb_splay-thumb_rotation)/2
      shift: [center_x, center_y]
      #affect: [x, y]
    key.width: 100
    key.height: 100
  mcu: # xiao location
    key.width: xiao_x
    key.height: xiao_y
    anchor:
      ref: center
      shift: [-50/2, -50+2]
    key.adjust:
      orient: 90
      shift: [xiao_x/2, xiao_y/2]
  reset: # reset switch
      key.width: reset_x
      key.height: reset_y
      anchor:
        ref: center
        shift: [-50+2, -50+xiao_x+5]
      key.adjust:
        orient: 90
        shift: [reset_x/2, -reset_y/2]
  slider: # power switch
    key.width: slider_x
    key.height: slider_y
    anchor:
      ref: center
      shift: [-50+3, -50+xiao_x+5+slider_x+2] 
    key.adjust:
      orient: 90
      shift:
  jst: # battery connector
    anchor:
      ref: matrix_ring_bottom
      shift: [kx/2-12.35/2, -ky/2-6.9/2]
      rotate: -90
    key:
      width: 6.9
      height: 12.35
      from: battery
      to: GND
outlines:
  # ================= core =================
  _keys:
    - what: rectangle
      where: /matrix|thumb|encoder/
      bound: true
      size: [kx, ky]
  _keycaps:
    - what: rectangle
      where: /matrix|thumb/
      bound: true
      size: [px, py]
  _limits:
    - what: rectangle
      where: center
      size: [100, 100]
  # =============== components =============
  _mcu:
    - what: rectangle
      where: mcu
      size: [xiao_x, xiao_y]
  _reset:
    - what: rectangle
      where: reset
      size: [reset_x, reset_y]
  _slider:
    - what: rectangle
      where: slider
      size: [slider_x, slider_y]
  _jst:
    - what: rectangle
      where: jst
      size: [jst_x, jst_y]
  # ================= combos ===============
  _pcb_outline:
    - name: _limits
      fillet: 5
  pcb_view:
    - _pcb_outline
    - ^_mcu
    - ^_reset
    - ^_slider
    - ^_jst
    - ^_keys
  pcb_outline_combo:
    - _pcb_outline
    - ^_keys


pcbs:
  ravine_v2:
    template: kicad8
    outlines:
      main:
        outline: _pcb_outline
    footprints:
      switch:
        what: sw_combo
        where: /matrix|thumb/
        params:
          from: "{{row_net}}"
          to: "{{colrow}}"
          center: GND
      #encoder:    # commented because it prevents preview
      #  what: ceoloide/rotary_encoder_ec11_ec12
      #  where: /encoder/
      #  params:
      #    reversible: true
      #    include_plated_mounting_holes: false
      #    # adjust the two values below
      #    mounting_holes_position: 8
      #    encoder_pads_position: 8.254
      #    S1: "{{row_net}}"
      #    S2: "{{colrow}}"
      #    A: P8
      #    C: P9
      diode: #########
        what: diode_rev
        where: /matrix_|thumb_|encoder_/
        params:
          from: "{{colrow}}"
          to: "{{column_net}}"
        adjust:
          shift: [0, -8.5]
          rotate: 180
      #mcu: # commented because it prevents preview
      #  what: xiao
      #  where: mcu
      #  params:
      #    P0: col0
      #    P1: col1
      #    P2: col2
      #    P3: col3
      #    P4: led0
      #    P5: row0
      #    P6: row1
      #    P7: row2
      #    P8: row3
      #    P9: enc1
      #    NFC1: enc2
      #    NFC2: free2
      trrs:
        what: trrs
        where: trrs
        params:
          reverse: true
          symmetric: true
          A: GND
          B: GND
          C: trrs # IMPORTANT, make sure this is a HIGH FREQUENCY data pin
          D: RAW5V
      reset:
        what: button
        where:
          shift: [center_x + reset_x, center_y + reset_y]
        params:
          from: GND
          to: RST
      slider: # add jumpers to the slider
        what: placeholder
        where.ref: matrix_middle_bottom
        adjust.shift: [-10, -10]
      jst:
        what: ceoloide/battery_connector_jst_ph_2
        where:
          shift: [center_x+jst_x, center_y+jst_y]
          rotate: 180
        params:
          BAT_P: Bplus
          BAT_N: GND
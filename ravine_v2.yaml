meta:
  name: ravine_v2
  engine: 4.1.0
  main_inspiration: ezxzeng/sweep_squared_rot
  author: zakwaykway
units:
  kx: u # spacing
  ky: u
  px: u-0.25
  py: u-0.25
  xiao_x: 18
  xiao_y: 21

  pinky_splay: 0
  ring_stagger: .7ky
  ring_splay: 0
  middle_stagger: 0.25ky
  index_stagger: -0.5ky
  inner_stagger: -0.4ky
  thumb_base_angle: -12
  thumb_splay: -12
  thumb_stagger: -0.ky
  thumb_shiftx: 0.4kx # changes location -- 0.45kx
  thumb_shifty: -ky -2
  thumb_size: 1.5 # U

  # ==================== object locations ====================
  center_x: 0
  center_y: 0
  center_r: -16

  mcu_x: -32.8
  mcu_y: -32.25

  trrs_x: 48
e  trrs_y: 51.7

  reset_x: -8
  reset_y: -48

  power_x: -18.15
  power_y: -48.25

  jst_x: -18
  jst_y: -42

points.zones:
  matrix: # mx is top side, 90ยบ turns it c.clockw.
    anchor: # offset center's location
      shift: [center_x, center_y]
      rotate: center_r
    key:
      spread: kx
      padding: ky
      autobind: 0
    rows:
      bottom.row_net: P6
      home.row_net: P5
      top.row_net: P4
    columns.pinky:
      key.column_net: P0
      rows.bottom.skip: true
      rows.home.adjust.rotate: 180
    columns.ring:
      key:
        stagger: ring_stagger
        splay: -pinky_splay
        column_net: P1
        origin: [kx/2, -ky/2+ky-ring_stagger] # set origin as tangent pinky_home's corner
      rows.bottom:
        column_net: P0
    columns.middle:
      key:
        stagger: middle_stagger
        splay: -ring_splay
        column_net: P2
        origin: [-kx/2, -ky/2]
      rows.bottom.column_net: P1
    columns.index:
      key:
        stagger: index_stagger
        column_net: P3
      rows.bottom.column_net: P2
    columns.inner:
      key:
        stagger: inner_stagger
        column_net: P3
      rows:
        top.row_net: P6
        home.row_net: P7
        bottom.skip: true
  thumb:
    key:
      $extends: points.zones.matrix.key
      row_net: P7
    anchor:
      ref: matrix_index_bottom
      shift: [thumb_shiftx, thumb_shifty]
    columns:
      tucky.key:
        origin: [-kx/2, ky/2]
        column_net: P1
        splay: thumb_base_angle
      reachy.key:
        bind: [(thumb_size*kx-kx)/2, 0]
        column_net: P2
        splay: thumb_splay
        stagger: thumb_stagger
        origin: [-kx/2, -ky/2]
        adjust.rotate: -90
        width: thumb_size * kx
  encoder: # thumbs
    key:
      $extends: points.zones.matrix.key
      column_net: P0
      row_net: P7
    anchor:
      ref: matrix_middle_bottom
      shift: [0, -ky]
  center:
    anchor:
      aggregate.parts: [matrix_pinky_top, thumb_reachy]
      orient: center_r+pinky_splay+ring_splay
      shift: [center_x, center_y]
      affect: [x, y]
    key.width: 100
    key.height: 100
  mcu: # xiao location
    key.width: xiao_x
    key.height: xiao_y
      
outlines:
  # ================= keys =================
  _keys:
    - what: rectangle
      where: /matrix|thumb|encoder/
      bound: true
      size: [kx, ky]
  key_display:
    - what: rectangle
      where: /matrix|thumb|encoder/
      bound: true
      size: [px, py]
  _limits:
    - what: rectangle
      where: center
      bound: true
      size: 100
  # ================= combos ===============
  test:
    - _limits
    - ^_keys
  _pcb_outline:
    - name: _limits
      fillet: 2
  pcb_outline_combo:
    - _pcb_outline
    - ^_keys
    - ^_limits

pcbs:
  ravine_v2:
    template: kicad8
    outlines:
      main:
        outline: _pcb_outline
    footprints:
      switch:
        what: sw_combo
        where: /matrix|thumb/
        params:
          from: "{{row_net}}"
          to: "{{colrow}}"
          center: GND
      #encoder:    # commented because it prevents preview
      #  what: ceoloide/rotary_encoder_ec11_ec12
      #  where: /encoder/
      #  params:
      #    reversible: true
      #    include_plated_mounting_holes: false
      #    # adjust the two values below
      #    mounting_holes_position: 8
      #    encoder_pads_position: 8.254
      #    S1: "{{row_net}}"
      #    S2: "{{colrow}}"
      #    A: P8
      #    C: P9
      diode: #########
        what: diode_rev
        where: /matrix_|thumb_|encoder_/
        params:
          from: "{{colrow}}"
          to: "{{column_net}}"
        adjust:
          shift: [0, -8.5]
          rotate: 180
      mcu:
        what: xiao2
        where:
          shift: [center_x + mcu_x, center_y + mcu_y]
          rotate: 90
      trrs:
        what: trrs
        where:
          - shift: [center_x + trrs_x, center_y + trrs_y]
        params:
          reverse: true
          symmetric: true
          A: GND
          B: GND
          C: NFC1 # IMPORTANT, make sure this is a HIGH FREQUENCY data pin
          D: VCC
      reset:
        what: button
        where:
          shift: [center_x + reset_x, center_y + reset_y]
        params:
          from: GND
          to: RST
      slider: # add jumpers to the slider
        what: placeholder
        where.ref: matrix_middle_bottom
        adjust.shift: [-10, -10]
      jst:
        what: ceoloide/battery_connector_jst_ph_2
        where:
          shift: [center_x+jst_x, center_y+jst_y]
          rotate: 180
        params:
          BAT_P: Bplus
          BAT_N: GND